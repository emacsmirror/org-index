{#nosleep}
;; Local Variables:
;; fill-column: 70
;; End:

https://obsproject.com/forum/resources/how-to-convert-flvs-to-mp4-fast-without-re-encoding.78/
C:\Users\Marc-Oliver\Desktop\FLV Extract

(frame-pixel-height)
(frame-pixel-width)

---
{start}
{kbd M-x~o~r~g~-~i~n~d~e~x~RET~c~r~e~a~t~e~-~i~n~d~e~x~10~RET~10~d~e~m~o~.~o~r~g~10~RET~I~n~d~e~x~10~RET~-~-~\1~-~-~10~RET~y~10~RET~y~10~RET~<f7>~10~RET~y~10~RET}done.{sleep 1}

  Welcome to this minimal demo of org-index {sleepscale 2}{sleep 1}!{sleep 2}

  Let us assume, that you have a lot of nodes in org and sometimes
  problems to find the right one.{sleep 0.5}

  Well, in much the same way it can be difficult to find the right
  page in a book. To help with that, some books contain an Index: A
  sorted list of keywords, where each keyword links to a specific
  location (i.e. page) in the book. And that's what org-index can be
  for org.{sleep 1}

  org-index can be installed from melpa with a standard package-install. 

  Then, to start using org-index, we need some nodes. Probably you
  already have hundreds of them, but for this screencast, we only need
  a handful; lets create them ... {mark}
{sleepscale 0.2}
* one two
* one three
* two three
* one four
{return}{sleepscale 2}done.{sleep 1}

  Now, when you invoke org-index for the first time it will ask you
  some questions and create your index. Just watch ... {sleep 1}{kbd M-x~o~r~g~-~i~n~d~e~x~RET~c~r~e~a~t~e~-~i~n~d~e~x~10~RET~10~d~e~m~o~.~o~r~g~10~RET~I~n~d~e~x~RET~-~-~\1~-~-~10~RET~n~10~RET~y~10~RET~}done.{sleep 1}

  (Just let me recenter ... {sleep 0.5}{recenter 5}done{sleep 0.3})

  However, the new index only contains a single line ! So lets add nodes,
  simply by pressing "C-c i a" on each of our headlines. Nodes are
  referenced by their IDs, so each node gains a property-drawer with
  its ID. Note also, how the index table grows ...{#dosleep}{mark}{search * one two}{kbd C-c i a~4~TAB C-a}{sleep 0.3}{search * one three}{kbd C-c i a~4~TAB C-a}{sleep 0.3}{search * two three}{kbd C-c i a~4~TAB C-a}{sleep 0.3}{search * one four}{kbd C-c i a~4~TAB C-a}{sleep 0.3}{return} done.{sleep 1}

  Now our index contains 5 lines, one for each node added. Please
  mark, that we had to add nodes to the index manually; thats
  intended, because the index should contain only the nodes we choose.

  Having a closer look at the index table we observe:

  - The column keywords contains the headline of each node added.
  - There is a column "count", which currently contains 1 for all
    lines. The index table is sorted by this column.
  - Finally there is a column id, which contains the id of all the
    nodes added and allows to access them quickly. However, currently
    this column is hidden beyond the edge of this window.

  (Recenter ... {sleep 0.3}{recenter 5}done{sleep 0.2})
    
  With a populated index we may start to search: Let us assume, that
  among your nodes it has become difficult to find the right one.
  However, you remember that its heading contained the strings "one"
  and "two".
  
  We will search by invoking the occur command of org-index. It will
  ask for keywords and incrementally narrow the set of matching lines
  as we type.  We start the search by typing "C-c i o" and then our
  search words. Initially all lines are shown, and the line "one two"
  appears last; but then with every keystroke fewer and fewer lines are
  displayed until we choose the right one ... {sleep 0.5}{dosleep}{kbd C-c i o o~3~RET n~3~RET e~3~RET SPC~3~RET t~6~RET~< d o w n >~~~RET~8~RET~6~<down>~<down>~RET~RET~RET~<up>~<up>~SPC~SPC,H,e,r,e,SPC,w,e,SPC,l,a,n,d,e,d,.~~~}done.{sleep 1} 

  And after searching we landed at the desired node ("one two") by 
  hitting RET.

  Thats how to navigate to a node with the help of our index.{sleep 0.5}

  (Recenter ... {sleep 0.3}{recenter 5}done{sleep 0.5})

  Now have another look at our index table: The index line for our last
  search ("one two") now appears first within the index table as its
  count is now 2; it has been incremented automatically when we hit
  RET to end the last search.

  Just watch another search for the node "one two"; this time the
  desired line already appears first in the index. So we only need to
  hit RET, which increments its count to 3 ... {dosleep}{sleep 0.5}{kbd C-c i o~3~< r e t u r n >~~~RET~<down>~<down>~<down>~RET~<up>~SPC~SPC,H,e,r,e,SPC,a,g,a,i,n,.~~~}done.{sleep 1}

{dosleep}  So now, we have seen the main features of org-index: How to
  add nodes to the index and how to search. But of course org-index
  has more commands: Most notable to remove lines from the index and to
  edit their content.{sleep 0.5}

  Finally, the index may contain more than just IDs of org nodes:

  - References, which are small numbers, that can be used outside of
    org. In our example references look like this: --1--
  - Yanks, just short pieces of text, that are copied to the clipboard

  (Recenter ... {sleep 0.3}{recenter 12}done{sleep 1})


  I hope, this is enough to start using org-index. If you
  encounter any problems, feel free to send me a mail:

    org-index@2484.de
    
  Best regards
  Marc

---
